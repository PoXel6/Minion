plugins {
    id 'java'
    id("com.gradleup.shadow") version "9.0.0-beta10"
}

shadowJar {
    relocate("dev.triumphteam.gui", "me.poxel6.mininion.gui")

    relocate("co.aikar.commands", "me.poxel.punishplugin.acf")
    relocate("co.aikar.locales", "me.poxel.punishplugin.locales")

    destinationDirectory = file("/mnt/c/Users/pox/AppData/Roaming/Fork/servers/Server/plugins")
}
group = 'me.poxel6'
version = '0.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven { url = "https://repo.triumphteam.dev/snapshots/" }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }
}


compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = System.getProperty("java.home") + "/bin/javac"
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")

    implementation("co.aikar:acf-paper:0.5.1-SNAPSHOT")

    implementation "dev.triumphteam:triumph-gui:3.1.11"

    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
}

jar {
    enabled = false
}
def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
